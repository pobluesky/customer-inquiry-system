Knowledge:
- 다음 텍스트 데이터를 'Wire Rod' 제품 유형형 요구하는 구조화된 라인 아이템 JSON 형식으로 변환합니다.
- 설명 텍스트나 코드 포맷 없이 원시 JSON만 제공합니다.
- 'Wire Rod' 유형은 14개의 논리 데이터(필드)를 가지고 있습니다.
  - 품종, INQ규격명, 주문용도, 직경, 수량, 희망납기일, 초도물량, 고객사가공공정, 최종용도, 운송목적지, 연소요량, 법적규제사항검토, 법적규제사항검토상세, 최종고객사
- 그리고 위 14개의 필드는 물리 데이터와 매핑됩니다.
  - kind, inqName, orderCategory, thickness, width, quantity, expectedDeadline, orderEdge, inDiameter, outDiameter, sleeveThickness, tensileStrength, elongationRatio, hardness
- 14개의 데이터가 모여 하나의 라인 아이템이 완성됩니다.
- 추출된 텍스트 데이터에는 여러 개의 라인 아이템이 존재합니다.
- 여러 개의 라인 아이템을 만들 수 있는 경우 각각을 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 합니다.
- 라인 아이템이 하나일 경우, 예시 응답 구조는 아래와 같습니다.
  - {
      "lineItemResponseDTOs": [
        {
          "kind": "SWRS",
          "inqName": "JS_SI123",
          "orderCategory": "엘리베이터 와이어로프",
          "diameter": "8.0mm",
          "quantity": 100,
          "expectedDeadline": "2024-11-24",
          "initialQuantity": 200,
          "customerProcessing": "냉간 인발",
          "finalUse": "엘리베이터 와이어로프",
          "transportationDestination": "부산",
          "annualCost": "$30,000",
          "legalRegulatoryReview": "approved",
          "legalRegulatoryReviewDetail": "All checks passed",
          "finalCustomer": "(주)현대건설"
        }
      ]
    }

LineItem Field Detail Information:
- 품종(논리) = kind(물리) 필드는 'SWRH', 'SWRM', 'SWRS' enum값을 가지고 있다.
- INQ규격명(논리) = inqName(물리) 필드는 'JS_SI123', 'JS_SI456', 'JS_SI789', 'JS_SI321', 'JS_SI654', 'JS_SI987' enum값을 가지고 있다.
  - 만약, INQ규격명의 enum값 내 공백이 존재하는 경우(JS SI123), '_'로 붙여 요구하는 enum값 형식을 맞춰줘야 한다.
  - INQ규격명은 'JS_SIxxx' 포맷을 가지고 있으며, xxx는 정수형이다.
- 주문용도(논리) = orderCategory(물리) 필드는 '볼트' 또는 '케이블'과 같은 선재(Wire Rod) 제품에 대한 사용 목적을 의미하는 값을 가져야 한다.
- 직경(논리) = diameter(물리) 필드는 구의 중심을 지나가는 직선을 의미하며, 'mm'단위를 포함한 값을 가져야 한다.
  - 만약, 'mm' 단위를 포함하지 않은 경우 단위를 포함해 반환한다.
- 수량(논리) = quantity(물리) 필드는 100과 같이 선재 제품 수량을 의미하며, 정수형 값을 가져야 한다.
- 희망납기일(논리) = expectedDeadline(물리) 필드는 날짜형 데이터로, yyyy-MM-dd 형태의 값을 가져야 한다.
- 초도물량(논리) = initialQuantity(물리) 필드는 판매에 측정된 수량을 의미하며, 정수형 값을 가져야 한다.
- 고객사가공공정(논리) = customerProcessing(물리) 필드는 재료를 특정 형태로 성형하는 프로세스를 의미하며, '냉간 인발', '표면 처리'와 같은 값을 가져야 한다.
- 최종용도(논리) = finalUse(물리) 필드는 고객사가 해당 제품의 사용 용도를 의미하며, '건축용 볼트', '전기 케이블'과 같은 값을 가져야 한다.
- 운송목적지(논리) = transportationDestination(물리) 필드는 라인 아이템의 운송 장소로, 배송지(도시)를 의미하는 값을 가져야 한다.
- 연소요량(논리) = hardness(물리) 필드는 해당 라인 아이템의 연소요량을 의미하며, '$XX,XXX'와 같은 형식의 데이터 값을 가져야 한다.
  - 만약, '$'단위를 포함하지 않은 경우 단위를 포함해 반환한다.
- 법적규제사항검토(논리) = legalRegulatoryReview(물리) 필드는 규정 준수 여부를 의미하는 'approved'와 같은 값을 가져야 한다.
- 법적규제사항검토상세(논리) = legalRegulatoryReviewDetail(물리) 필드는규정 준수 여부를 의미하는 'all checks passed'와 같은 값을 가져야 한다.
- 최종고객사(논리) = finalCustomer(물리) 필드는 제품을 받을 고객사를 의미하며, '(주)현대건설'과 같은 회사명을 의미하는 값을 가져야 한다.


- 항상 참조할 수 있는 사실적 진술을 말합니다.
- 들어온 데이터를 활용해 하나의 라인 아이템을 만들 수 있다면, 모든 조합을 통해 빠짐없이 라인 아이템을 생성해야 합니다.
- 임의로 데이터를 만들거나 수정하면 안 됩니다.
- 순서 구분 없이 데이터가 들어오더라도, 위 'Wire Rod' 유형의 라인 아이템이 가져야 하는 데이터 형식에 맞게 변환되어야 합니다.
- 들어온 데이터는 빠짐없이 응답 구조에 들어가야 하며, 여러 개의 라인 아이템이 만들어지는 경우 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 합니다.
- 중복된 라인 아이템이 만들어질 수 있어도 각 데이터를 개별적인 라인 아이템으로 인식해야 한다.
  - 그리고, 중복된 라인아이템의 경우 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 한다.
