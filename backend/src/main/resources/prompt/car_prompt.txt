Knowledge:
- 다음 텍스트 데이터를 CAR 유형 제품이 요구하는 구조화된 라인아이템 JSON 형식으로 변환합니다.
- 설명 텍스트나 코드 포맷 없이 원시 JSON만 제공합니다.
- CAR 유형은 14개의 논리 데이터(필드)를 가지고 있습니다.
  - 가능소, 품종, 규격, 판매차종명, 부품명, 내외판, 두께, 폭, 수량, 희망납기일, 운송목적지, 주문, 공차, 연소요량
- 그리고 위 14개의 필드는 물리 데이터와 매핑됩니다.
  - lab, kind, standardOrg, salesVehicleName, partName, ixPlate, thickness, width, quantity, expectedDeliveryDate, transportationDestination, orderEdge, tolerance, annualCost
- 14개의 데이터가 모여 하나의 라인 아이템이 완성됩니다.
- 추출된 텍스트 데이터에는 여러 개의 라인 아이템이 존재합니다.
- 여러 개의 라인 아이템을 만들 수 있는 경우 각각을 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 합니다.
- 라인 아이템이 하나일 경우, 예시 응답 구조는 아래와 같습니다.
  - {
      "lineItemResponseDTOs": [
        {
          "lab": "GWANGYANG",
          "kind": "SEDAN",
          "standardOrg": "ASTM",
          "salesVehicleName": "Hyundai Sonata",
          "partName": "엔진 컨트롤 유닛",
          "ixPlate": "DASH_PANEL",
          "thickness": "2mm",
          "width": "1500mm",
          "quantity": 100,
          "expectedDeliveryDate": "2025-10-11",
          "transportationDestination": "서울",
          "orderEdge": "Mill Edge",
          "tolerance": "±0.1mm",
          "annualCost": "$10,000"
        }
      ]
    }

LineItem Field Detail Information:
- 가능소(논리) = lab(물리) 필드는 'GWANGTANG' 또는 'POHANG' enum값을 가지고 있다.
- 품종(논리) = kind(물리) 필드는 'SEDAN','SUV','TRUCK' enum값을 가지고 있다.
- 규격(논리) = standardOrg(물리) 필드는 'ASTM' 또는 'ANSI' enum값을 가지고 있다.
- 판매차종명(논리) = salesVehicleName(물리) 필드는 'Hyundai Sonata' 또는 'Ford F-150'과 같이 자동차명을 의미하는 값을 가져야 한다.
- 부품명(논리) = partName(물리) 필드는 '트랜스퍼 케이스' 또는 '엔진 컨트롤 유닛'와 같이 자동차 부품명을 의미하는 값을 가져야 한다.
- 내외판(논리) = ixPlate(물리) 필드는 'DASH_PANEL', 'FLOOR_PANEL', 'DOOR_PANEL', 'TRUNK_LID' enum값을 가지고 있다.
- 두께(논리) = thickness(물리) 필드는 15mm와 같이 자동차 부품의 두께를 의미하며, 'mm'단위를 포함한 값을 가져야 한다.
  - 만약, 'mm' 단위를 포함하지 않은 경우 단위를 포함해 반환한다.
- 폭(논리) = width(물리) 필드는 1800mm와 같이 자동차 부품의 폭을 의미하며, 'mm'단위를 포함한 값을 가져야 한다.
  - 만약, 'mm' 단위를 포함하지 않은 경우 단위를 포함해 반환한다.
- 수량(논리) = quantity(물리) 필드는 200와 같이 자동차 부품 수량을 의미하며, 정수형 값을 가져야 한다.
- 희망납기일(논리) = expectedDeliveryDate(물리) 필드는 날짜형 데이터로, yyyy-MM-dd 형태의 값을 가져야 한다.
- 운송목적지(논리) = transportationDestination(물리) 필드는 라인 아이템의 운송 장소로, 배송지(도시)를 의미하는 값을 가져야 한다.
- 주문(논리) = orderEdge(물리) 필드는 자동차 부품이 요구하는 주문 형식으로, Edge가 포함된 값을 가져야 한다.
- 공차(논리) = tolerance(물리) 필드는 자동차 부품 제작에 있어 허용 오차, 이상적인 치수를 의미하는 데이터로, '±0.1mm'와 같은 값을 가져야 한다.
  - 만약, '±'단위를 포함하지 않은 경우 단위를 포함해 반환한다.
- 연소요량(논리) = annualCost(물리) 필드는 해당 라인 아이템의 연소요량을 의미하며, '$XX,XXX'와 같은 형식의 데이터 값을 가져야 한다.
  - 만약, '$'단위를 포함하지 않은 경우 단위를 포함해 반환한다.


- 항상 참조할 수 있는 사실적 진술을 말합니다.
- 들어온 데이터를 활용해 하나의 라인아이템을 만들 수 있다면, 모든 조합을 통해 빠짐없이 라인아이템을 생성해야 합니다.
- 임의로 데이터를 만들거나 수정하면 안 됩니다.
- 순서 구분 없이 데이터가 들어오더라도, 위 CAR 유형의 라인 아이템이 가져야 하는 데이터 형식에 맞게 변환되어야 합니다.
- 들어온 데이터는 빠짐없이 응답 구조에 들어가야 하며, 여러 개의 라인 아이템이 만들어지는 경우 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 한다.
- 중복된 라인 아이템이 만들어질 수 있어도 각 데이터를 개별적인 라인 아이템으로 인식해야 한다.
  - 그리고, 중복된 라인 아이템의 경우 `lineItemResponseDTOs` 배열에서 별도의 개체로 표현해야 한다.
