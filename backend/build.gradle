plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.8'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.pobluesky'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Query Log
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.instancio:instancio-junit:4.0.0'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'io.github.cdimascio:java-dotenv:5.2.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

	runtimeOnly 'org.postgresql:postgresql'

	// google cloud vision
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	implementation platform('com.google.cloud:libraries-bom:26.1.4')
	implementation 'com.google.cloud:google-cloud-bigquery'
	implementation 'com.google.cloud:google-cloud-vision:3.3.0'

	// gcp storage
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter:1.2.8.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-gcp-storage:1.2.8.RELEASE'

	//PDF
	implementation 'org.apache.pdfbox:pdfbox:2.0.27'
	implementation 'org.apache.pdfbox:pdfbox-tools:2.0.27'

	// FCM
	implementation("com.google.firebase:firebase-admin:6.8.1")
	implementation("com.squareup.okhttp3:okhttp:4.2.2")

	// apache poi
	implementation 'org.apache.poi:poi-ooxml:5.2.3'
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.commons:commons-io:1.3.2'

	//cloudfront
	implementation 'software.amazon.awssdk:cloudfront:2.28.7'
	testImplementation 'software.amazon.awssdk:url-connection-client:2.28.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QClass path
def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

clean {
	delete file('src/main/generated')
}

